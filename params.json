{"name":"Repositorysynchronizer","tagline":"Pentaho Repository Synchronizer","body":"[![Build Status](https://travis-ci.org/Tiger66639/repositorySynchronizer.svg)](https://travis-ci.org/Tiger66639/repositorySynchronizer)\r\nrepositorySynchronizer\r\n===\r\nPentaho Plugin allowing synchronization between JCR and the File System.\r\n\r\nPRS depends on the following CTools:\r\n\r\n* CDF: Community Dashboard Framework\r\n* CDE: Community Dashboard Editor\r\n* CDA: Community Data Access\r\n* CGG: Community Graphics Generator\r\n* \r\nYou can install these packages from the Pentaho Marketplace, or manually download them from [Pentaho's Continuous Integration server](http://ci.pentaho.com) and unzip the .zip file to your `pentaho-solutions/system` folder.\r\n\r\nIf you are using the Enterprise Edition, we recommend you to install the Pentaho Marketplace. Follow the instructions at [Pedro Alves's blog](http://pedroalves-bi.blogspot.pt/2013/11/ctools-for-pentaho-50-is-available-cdf.html).\r\n\r\n### Configuration\r\n\r\nBy default, the Pentaho Repository Synchronizer stores its settings in the file `prs.xml`, which by default looks like this:\r\n\r\n    <?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n    <prs>\r\n    \t<locations>\r\n    \t\t<location path=\"jcr-solution:http://127.0.0.1:8080/pentaho!/\" name=\"JCR\"/>\r\n    \t\t<location path=\"${cpk.solution.system.dir}/../repositorySynchronizer\" name=\"File System\"/>\r\n    \t</locations>\r\n    \t<excludes>\r\n    \t\t<!-- Exclude all dot folders and files -->\r\n    \t\t<exclude pattern=\".*/\\.[^/]*(/.*)?\"/>\r\n    \t\t<!-- Exclude sample folders -->\r\n    \t\t<exclude pattern=\".*/bi-developers(/.*)?\"/>\r\n    \t\t<exclude pattern=\".*/pentaho-operations-mart(/.*)?\"/>\r\n    \t\t<exclude pattern=\".*/plugin-samples(/.*)?\"/>\r\n    \t\t<exclude pattern=\".*/Steel\\sWheels(/.*)?\"/>\r\n    \t</excludes>\r\n    \t<last_synch>0</last_synch>\r\n    </prs>\r\n\r\nNote that:\r\n\r\n * the variable `${cpk.solution.system.dir}` points to `pentaho-solutions/system`\r\n * by default, the sample files distributed with a pristine installation are excluded. Dot files such as `.git` are also ignored.\r\n\r\n\r\n## Pro tips\r\n### Access JCR from within Spoon\r\nDeveloping PDI jobs and transformations that manipulate files in the JCR can be a bit hard given the fact that Spoon does not allow you to access the JCR out of the box.\r\n\r\nIn fact, Spoon requires some jar files to be installed in order to be able to operate with a JCR repository running on a BI server.\r\nHere's what you need to do:\r\n\r\n\r\n1. Copy the file `libpensol-TRUNK-SNAPSHOT.jar` from `biserver/pentaho-solutions/system/repositorySynchronizer/_lib_`\r\ninto `data-integration/lib`.\r\n2. Copy the file `pentaho-platform-repository-5.*-stable.jar` from \r\n`biserver/tomcat/webapps/pentaho/WEB-INF/lib` into `data-integration/lib`.\r\n\r\nNow you can access the files in the JCR by using a root URI such as `jcr-solution:http://user:password@127.0.0.1:8080/pentaho!/`. Note that from within Spoon, the URI needs to contain the credentials to access the server.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}